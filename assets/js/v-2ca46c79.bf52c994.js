(self.webpackChunknote=self.webpackChunknote||[]).push([[5861],{7533:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-2ca46c79",path:"/css-secret/26.html",title:"第二十六章、扩大可点击区域",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"css-secret/26.md"}},9097:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="第二十六章、扩大可点击区域" tabindex="-1"><a class="header-anchor" href="#第二十六章、扩大可点击区域" aria-hidden="true">#</a> 第二十六章、扩大可点击区域</h1><p>可点击区域想歪扩张往往可以带来可用性的提升。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.a</span><span class="token punctuation">{</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 10px solid transparent<span class="token punctuation">;</span> // 添加10px的透明边框，让元素比实际看上去的大10px\n    <span class="token property">background-clip</span><span class="token punctuation">:</span> padding-box<span class="token punctuation">;</span> // 背景会延伸到透明边框下，指定背景限制在原本的区域内\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> inset<span class="token punctuation">;</span> // 因为占用了边框模拟点击区域，所以使用阴影模拟边框\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>最外边框为元素的实际大小：</p><div align="center"><img src="/note/images/css-secret/26/1.png"></div><p>这种方法的局限性在于需要绘制外部投影时，会变得怪异，因为外部投影都是绘制在边框之外的。可以利用伪元素解决这一问题。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.a:before</span><span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>伪元素可以相应鼠标交互，这个方案非常灵活，因为伪元素大小可以任意，位置甚至可以脱离主元素。</p><div align="center"><img src="/note/images/css-secret/26/2.png"></div>',9),e={render:function(n,s){return p}}}}]);