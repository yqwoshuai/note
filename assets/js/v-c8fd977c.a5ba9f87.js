(self.webpackChunknote=self.webpackChunknote||[]).push([[9852],{1681:(a,n,e)=>{"use strict";e.r(n),e.d(n,{data:()=>s});const s={key:"v-c8fd977c",path:"/js-develop/4.html",title:"第四章、变量，作用于和内存问题",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基本类型和引用类型的值",slug:"基本类型和引用类型的值",children:[]},{level:2,title:"执行环节及作用域",slug:"执行环节及作用域",children:[]},{level:2,title:"内存问题",slug:"内存问题",children:[]}],filePathRelative:"js-develop/4.md"}},5970:(a,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>t});const s=(0,e(6252).uE)('<h1 id="第四章、变量-作用于和内存问题" tabindex="-1"><a class="header-anchor" href="#第四章、变量-作用于和内存问题" aria-hidden="true">#</a> 第四章、变量，作用于和内存问题</h1><h2 id="基本类型和引用类型的值" tabindex="-1"><a class="header-anchor" href="#基本类型和引用类型的值" aria-hidden="true">#</a> 基本类型和引用类型的值</h2><p>基本类型值指的是简单的数据段，包括5种：Undefined、Null、Boolean、Number、String。<br> 引用类型指的是可能由多个值构成的对象。</p><p>类型检测： 检测基本类型时，使用typeof操作符确定一个变量是字符串、数值、布尔值、还是undefined，对null的检测会返回&quot;Object&quot;。<br> 检测引用类型时，使用instanceof操作符，如果变量是给定引用类型的实例，则instanceof操作符返回true。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>所有引用类型的值都是Object的实例，所以检测引用类型值和Object构造函数时始终返回true。检测基本类型值时，始终返回false。</p><h2 id="执行环节及作用域" tabindex="-1"><a class="header-anchor" href="#执行环节及作用域" aria-hidden="true">#</a> 执行环节及作用域</h2><p>全局执行环境是最外围的执行环境，在Web浏览器中，全局执行环境是window对象，所有全局变量和函数都是作为window对象的属性和方法创建的。</p><p>内部环境可以通过作用域链访问所有的外部环境，每个环境都可以向上搜索作用域链，但不能向下搜索。</p><p>var声明的变量会自动添加到最近的环境中，初始化变量没有使用var声明时，该变量自动被添加到全局作用域。</p><h2 id="内存问题" tabindex="-1"><a class="header-anchor" href="#内存问题" aria-hidden="true">#</a> 内存问题</h2><p>优化内存占用的最佳方式，就是为执行中的代码只保存必要的数据，一旦数据不再有用，就将其设置为null来释放其引用。等待垃圾收集器将其回收。</p>',12),t={render:function(a,n){return s}}}}]);