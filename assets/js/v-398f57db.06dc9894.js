(self.webpackChunknote=self.webpackChunknote||[]).push([[9593],{1039:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-398f57db",path:"/js-develop/12.html",title:"第十二章、DOM2和DOM3",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"DOM变化",slug:"dom变化",children:[]},{level:2,title:"样式",slug:"样式",children:[{level:3,title:"访问元素的样式",slug:"访问元素的样式",children:[]},{level:3,title:"元素大小",slug:"元素大小",children:[]}]}],filePathRelative:"js-develop/12.md"}},3599:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="第十二章、dom2和dom3" tabindex="-1"><a class="header-anchor" href="#第十二章、dom2和dom3" aria-hidden="true">#</a> 第十二章、DOM2和DOM3</h1><h2 id="dom变化" tabindex="-1"><a class="header-anchor" href="#dom变化" aria-hidden="true">#</a> DOM变化</h2><p>node类型变化，DOM3引入两个辅助比较节点的方法，isSameNode()和isEqualNode()，分别判断调用节点和参数节点是否相同或相等。相同表示两个节点引用的是同一个节点，相等表示两个节点是相同的类型，具有相同的属性(nodeName，nodeValue)，而且他们的attributes和childNodes属性也相等。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;a&quot;</span><span class="token operator">&gt;</span>\n\t<span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;b&quot;</span><span class="token operator">&gt;</span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n\t<span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;b&quot;</span><span class="token operator">&gt;</span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n\n<span class="token keyword">var</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isSameNode</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isEqualNode</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>框架的变化，框架和内嵌框架DOM2级新增属性contentDocument，这个属性包含一个指针，指向表示框架内容的文档对象。IE8之前不支持本属性，但支持一个contentWindow属性，该属性返回框架的window对象，window对象又包含document属性。兼容性获取框架的文档对象：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementBy</span><span class="token punctuation">(</span><span class="token string">&quot;iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> iframeDoc <span class="token operator">=</span> iframe<span class="token punctuation">.</span>contentDocument <span class="token operator">||</span> iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h2><h3 id="访问元素的样式" tabindex="-1"><a class="header-anchor" href="#访问元素的样式" aria-hidden="true">#</a> 访问元素的样式</h3><p>任何支持style特性的HTML元素都有一个对应的style属性，包含通过HTML的style特性指定的所有样式信息，但不包含外部样式表或嵌入样式表经层叠而来的样式。有短划线的CSS属性名（例如background-color）必须转为驼峰大小写形式。float是JavaScript中的关键字，要转为cssFloat，IE使用的是styleFloat。style对象具有以下属性方法：<br> cssText属性，能够访问到style特性中的CSS代码。<br> getPropertyValue()，传入一个参数，返回包含给定属性名的字符串值。<br> getPropertyPriority()，传入一个参数，返回包含给定属性是否使用了!important设置。设置了则返回&quot;important&quot;字符串，否则返回空字符串。<br> removeProperty()，传入一个参数，从样式中删除给定的属性。<br> setProperty()，传入3个参数，要设置的属性名，要设置的属性值，表示是否使用!important设置的“important”字符串或空字符串。<br> document.defaultView.getComputedStyle()方法用于确定元素所有的计算样式，接收两个参数，第一个为需要取得计算样式的元素，第二个为伪元素字符串，不需要伪元素则为null。IE不支持本方法，但提供元素的currentStyle属性，包含当前元素的所有计算样式。所有计算样式都是只读的，不能修改计算后的样式对象中的CSS。</p><h3 id="元素大小" tabindex="-1"><a class="header-anchor" href="#元素大小" aria-hidden="true">#</a> 元素大小</h3><p>元素的可见大小由其高度，宽度决定，包括内边距，滚动条和边框大小，不包括外边距。<br> offsetParent属性，表示元素的包含元素，不一定与parentNode相等。<br> offsetHeight属性，元素在垂直方向上占用空间大小，包括元素高度，水平滚动条的高度，上边框高度和下边看高度。<br> offsetWidth属性，元素在水平方向上占用空间大小，包括元素宽度，垂直滚动条的宽度，左边框宽度和右边看宽度。<br> offsetLeft属性，元素左外边框到包含元素的左内边框之间的距离。<br> offsetTop属性，元素上外边框到包含元素的上内边框之间的距离。<br> 判断元素在页面上的偏移量：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getElementLeftTop</span><span class="token punctuation">(</span><span class="token parameter">ele</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> eleLeft <span class="token operator">=</span> ele<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>\n\t<span class="token keyword">var</span> eleTop <span class="token operator">=</span> ele<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>\n\t<span class="token keyword">var</span> cur <span class="token operator">=</span> ele<span class="token punctuation">.</span>offsetParent<span class="token punctuation">;</span>\n\t<span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t    eleLeft <span class="token operator">+=</span> cur<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>\n        eleTop <span class="token operator">+=</span> cur<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>\n\t    cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>offsetParent<span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\t<span class="token keyword">return</span> <span class="token punctuation">{</span>left<span class="token operator">:</span>eleLeft<span class="token punctuation">,</span> top<span class="token operator">:</span>eleTop<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>客户区域大小，指的是元素内容及其内边距所占据的空间大小。<br> clientWidth属性，元素内容区宽度加上左右内边距宽度。<br> clientHeight属性，元素内容区高度加上上下内边距宽度。<br> 确定浏览器的视口大小：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getElementWidthHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>compatMode <span class="token operator">==</span> <span class="token string">&quot;BackCompat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n\t        width<span class="token operator">:</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>\n\t\t    top<span class="token operator">:</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight\n\t    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            width<span class="token operator">:</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>\n\t        top<span class="token operator">:</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>滚动大小，指的是包含滚动内容的元素的大小。<br> scrollHeight属性，在没有滚动条的情况下，元素内容总高度。<br> scrollWidth属性，在没有滚动条的情况下，元素内容总宽度。<br> scrollLeft属性，被隐藏在内容区域左侧的像素数，通过设置这个属性可以改变元素的滚动位置。<br> scrollTop属性，被隐藏在内容区域上方的像素数，通过设置这个属性可以改变元素的滚动位置。<br> 确定文档总高度：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getDocWidthHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> docWidth<span class="token punctuation">,</span>docHeight<span class="token punctuation">;</span>\n\t<span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>compatMode <span class="token operator">==</span> <span class="token string">&quot;BackCompat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        docWidth <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">,</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        docHeight <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">,</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        docWidth <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">,</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        docHeight <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">,</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        width<span class="token operator">:</span>docWidth<span class="token punctuation">,</span>\n        height<span class="token operator">:</span>docHeight\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>确定元素大小，每个元素都有一个getBoundingClientRect()方法，该方法返回一个矩形对象，包含left、top、right、bottom属性。这些元素给出了元素相对于视口的位置。</p>',17),p={render:function(n,s){return t}}}}]);