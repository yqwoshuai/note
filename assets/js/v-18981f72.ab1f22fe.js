(self.webpackChunknote=self.webpackChunknote||[]).push([[8946],{6231:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-18981f72",path:"/fe-learn/2.html",title:"第二章 前端工程化实战",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"模块一 开发脚手架及封装自动化构建工作流",slug:"模块一-开发脚手架及封装自动化构建工作流",children:[{level:3,title:"Yeoman使用",slug:"yeoman使用",children:[]},{level:3,title:"Plop使用",slug:"plop使用",children:[]}]},{level:2,title:"模块二 模块化开发与规范化标准",slug:"模块二-模块化开发与规范化标准",children:[]}],filePathRelative:"fe-learn/2.md"}},8380:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="第二章-前端工程化实战" tabindex="-1"><a class="header-anchor" href="#第二章-前端工程化实战" aria-hidden="true">#</a> 第二章 前端工程化实战</h1><h2 id="模块一-开发脚手架及封装自动化构建工作流" tabindex="-1"><a class="header-anchor" href="#模块一-开发脚手架及封装自动化构建工作流" aria-hidden="true">#</a> 模块一 开发脚手架及封装自动化构建工作流</h2><h3 id="yeoman使用" tabindex="-1"><a class="header-anchor" href="#yeoman使用" aria-hidden="true">#</a> Yeoman使用</h3><p>安装yeoman</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> yo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>安装对应的generator</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> generator-node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在对应文件目录下运行generator</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> yo-test\n<span class="token builtin class-name">cd</span> yo-test\nyo node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>生成webapp类型的generator</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> generator-webapp\n<span class="token function">mkdir</span> yo-web\n<span class="token builtin class-name">cd</span> yo-web\nyo webapp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="自定义-generator" tabindex="-1"><a class="header-anchor" href="#自定义-generator" aria-hidden="true">#</a> 自定义 generator</h4><p>自定义 generator 的名称必须为 <code>generator-&lt;name&gt;</code> 这种形式</p><img src="/note/images/fe-learn/2/1.png"><p>安装基类 generator</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> yeoman-generator\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将 generator link到全局</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">link</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用自定义 generator</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>yo sample\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>index.js 内容</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// generator的核心入口，需要导出一个继承自 yeoman-generator 的类型</span>\n\n<span class="token keyword">const</span> Generator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;yeoman-generator&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> Generator <span class="token punctuation">{</span>\n  <span class="token comment">// 接收用户输入方法</span>\n  <span class="token function">prompting</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span>\n        message<span class="token operator">:</span> <span class="token string">&quot;your title&quot;</span><span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appname<span class="token punctuation">,</span> <span class="token comment">// 项目目录名称</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">answers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>answers <span class="token operator">=</span> answers<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 生成文件方法</span>\n  <span class="token function">writing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通过fs.write方法直接生成文件并写入内容</span>\n    <span class="token comment">// this.fs.write(this.destinationPath(&quot;temp.txt&quot;), Math.random().toString());</span>\n\n    <span class="token comment">// 通过模板文件生成文件</span>\n    <span class="token comment">// 模板地址 templates文件夹下</span>\n    <span class="token keyword">const</span> temp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">templatePath</span><span class="token punctuation">(</span><span class="token string">&quot;foo.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 输出文件目录</span>\n    <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">destinationPath</span><span class="token punctuation">(</span><span class="token string">&quot;foo.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 模板数据上下文，ejs内的数据</span>\n    <span class="token comment">// const context = { title: &quot;hello&quot;, success: true };</span>\n\n    <span class="token comment">// 接收用户输入的数据</span>\n    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answers<span class="token punctuation">;</span>\n\n    <span class="token comment">// 输出文件</span>\n    <span class="token comment">// this.fs.copyTpl(temp, output, context);</span>\n\n    <span class="token comment">// 多个文件通过文件相对路径数组的形式生成</span>\n    <span class="token keyword">const</span> templates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;temp.txt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    templates<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">copyTpl</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">templatePath</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">destinationPath</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>发布自定义 generator , 发布时注意npm的镜像地址</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> publish\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="plop使用" tabindex="-1"><a class="header-anchor" href="#plop使用" aria-hidden="true">#</a> Plop使用</h3><p>安装 Plop 到开发依赖</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> plop --dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在项目目录下新增 plopfile.js 文件，为plop的入口，需要导出一个函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">plop</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 模板的名称为component，之后执行yarn plop component命令生成</span>\n  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    description<span class="token operator">:</span> <span class="token string">&quot;create a component&quot;</span><span class="token punctuation">,</span>\n    prompts<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>\n        message<span class="token operator">:</span> <span class="token string">&quot;component name&quot;</span><span class="token punctuation">,</span>\n        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;Mycomponent&quot;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    actions<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> <span class="token comment">// add为新增文件</span>\n        path<span class="token operator">:</span> <span class="token string">&quot;src/components/{{name}}/{{name}}.js&quot;</span><span class="token punctuation">,</span>\n        templateFile<span class="token operator">:</span> <span class="token string">&quot;plop-templates/components.hbs&quot;</span> <span class="token comment">// 模板的地址，为hbs类型文件</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>生成模板</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> plop component\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="模块二-模块化开发与规范化标准" tabindex="-1"><a class="header-anchor" href="#模块二-模块化开发与规范化标准" aria-hidden="true">#</a> 模块二 模块化开发与规范化标准</h2>',32),e={render:function(n,s){return p}}}}]);