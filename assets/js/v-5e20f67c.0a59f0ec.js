(self.webpackChunknote=self.webpackChunknote||[]).push([[8300],{7564:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-5e20f67c",path:"/css-secret/34.html",title:"第三十四章、紧贴底部的页脚",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"css-secret/34.md"}},2212:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="第三十四章、紧贴底部的页脚" tabindex="-1"><a class="header-anchor" href="#第三十四章、紧贴底部的页脚" aria-hidden="true">#</a> 第三十四章、紧贴底部的页脚</h1><p>当页面内容过少时，页脚会跟随内容，不会紧贴在页面底部。如图：</p><div align="center"><img src="/note/images/css-secret/34/1.png"></div><p>使用CSS计算属性calc为内容部分设置一个基于视口的最小高度。让页脚紧贴底部。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">//视口高度减去页脚的高度\nmain</span><span class="token punctuation">{</span>\n    <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100vh - 101px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div align="center"><img src="/note/images/css-secret/34/2.png"></div><p>上述方法必须要页脚高度已知，使用flex布局可以完美解决问题</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">&lt;div class=&quot;con&quot;&gt;\n\t&lt;div class=&quot;a&quot;&gt;\n\t\t&lt;p&gt;内容文字&lt;/p&gt;\n\t\t&lt;p&gt;内容文字&lt;/p&gt;\n\t\t&lt;p&gt;内容文字&lt;/p&gt;\n\t\t&lt;p&gt;内容文字&lt;/p&gt;\n\t\t&lt;p&gt;内容文字&lt;/p&gt;\n\t&lt;/div&gt;\n\t&lt;footer&gt;\n\t\t&lt;p&gt;底部内容&lt;/p&gt;\n\t&lt;/footer&gt;\n&lt;/div&gt;\n// 容器区块使用弹性布局，\n.con</span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    // 弹性布局内容元素为竖向排列\n    <span class="token property">flex-flow</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>\n    // 容器区块最小高度为整个可视区域\n    <span class="token property">min-height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">// 内容区块高度自动伸展充满可用空间\n.a</span><span class="token punctuation">{</span>\n\t<span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><div align="center"><img src="/note/images/css-secret/34/3.png"></div>',9),p={render:function(n,s){return e}}}}]);