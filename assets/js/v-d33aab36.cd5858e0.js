(self.webpackChunknote=self.webpackChunknote||[]).push([[9860],{351:(a,e,r)=>{"use strict";r.r(e),r.d(e,{data:()=>t});const t={key:"v-d33aab36",path:"/js-develop/1.html",title:"第一章、JavaScript 简介",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"完整的JavaScript实现",slug:"完整的javascript实现",children:[{level:3,title:"ECMAScript",slug:"ecmascript",children:[]},{level:3,title:"文档对象模型（DOM）",slug:"文档对象模型-dom",children:[]},{level:3,title:"浏览器对象模型（BOM）",slug:"浏览器对象模型-bom",children:[]}]}],filePathRelative:"js-develop/1.md"}},1477:(a,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>i});const t=(0,r(6252).uE)('<h1 id="第一章、javascript-简介" tabindex="-1"><a class="header-anchor" href="#第一章、javascript-简介" aria-hidden="true">#</a> 第一章、JavaScript 简介</h1><h2 id="完整的javascript实现" tabindex="-1"><a class="header-anchor" href="#完整的javascript实现" aria-hidden="true">#</a> 完整的JavaScript实现</h2><p>完整的JavaScript实现包括三部分：核心（ECMAScript）、文档对象模型（DOM）、浏览器对象模型（BOM）。</p><p>ECMAScript提供核心语言功能，DOM提供访问和操作网页内容的方法和接口，BOM提供与浏览器交互的方法和接口。</p><h3 id="ecmascript" tabindex="-1"><a class="header-anchor" href="#ecmascript" aria-hidden="true">#</a> ECMAScript</h3><p>Web浏览器只是ECMAScript实现可能的宿主环境，其他环境包括Node，Adobe Flash。</p><p>ECMAScript的组成部分：语法，类型，语句，关键字，保留字，操作符，对象。</p><h3 id="文档对象模型-dom" tabindex="-1"><a class="header-anchor" href="#文档对象模型-dom" aria-hidden="true">#</a> 文档对象模型（DOM）</h3><p>文档对象模型（DOM）是指针对XML，但经过扩展用于HTML的应用程序编程接口。</p><p>DOM1级：DOM核心，DOM HTML。 DOM核心规定如何映射基于XML的文档结构。DOM HTML扩展了针对HTML的对象和方法。</p><p>DOM2级：DOM视图，DOM事件，DOM样式，DOM遍历和范围。 DOM视图定义了应用CSS之前和之后的文档视图接口，DOM事件定义了事件和事件处理的接口，DOM样式定义了基于CSS为元素应用样式的接口，DOM遍历和范围定义了遍历和操作文档树的接口。</p><p>DOM3级：DOM加载和保存，DOM验证。 DOM加载和保存引入了以统一方式加载和保存文档的方法，DOM验证新增了验证文档的方法。</p><h3 id="浏览器对象模型-bom" tabindex="-1"><a class="header-anchor" href="#浏览器对象模型-bom" aria-hidden="true">#</a> 浏览器对象模型（BOM）</h3><p>BOM扩展包括：弹出新浏览器窗口功能，移动缩放和关闭浏览器窗口功能，提供浏览器详细信息的navigator对象，提供浏览器所加载页面的详细信息的location对象，提供用户显示器分辨率详细信息的screen对象，对cookies的支持，类似Ajax中的自定义对象。</p>',14),i={render:function(a,e){return t}}}}]);