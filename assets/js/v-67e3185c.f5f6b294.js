(self.webpackChunknote=self.webpackChunknote||[]).push([[5666],{6451:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-67e3185c",path:"/css-secret/9.html",title:"第九章、连续的图像边框",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"脚注效果",slug:"脚注效果",children:[]}],filePathRelative:"css-secret/9.md"}},1423:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>u});var p=a(6252);const e=(0,p.uE)('<h1 id="第九章、连续的图像边框" tabindex="-1"><a class="header-anchor" href="#第九章、连续的图像边框" aria-hidden="true">#</a> 第九章、连续的图像边框</h1><p>使用图片当做边框的原理：将图片设为背景，在图片的上方叠加一层内容区域背景色的渐变。并给两个背景指定不同的background-clip值。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">padding</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>\n<span class="token property">border</span><span class="token punctuation">:</span> 1em solid transparent<span class="token punctuation">;</span> //透明的边框使得能看见底部的背景图片\n<span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>white<span class="token punctuation">,</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;kazusa.png&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n<span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span> //将整张图片适应盒子的大小\n<span class="token property">background-clip</span><span class="token punctuation">:</span> padding-box<span class="token punctuation">,</span>border-box<span class="token punctuation">;</span> //不同的值使得渲染两层背景的显示位置不同。\n<span class="token property">background-origin</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> //图片默认是从padding位置开始渲染，将背景图片设为从border区域开始渲染。这样border的透明区域就不会出线图片拼接的怪异样式。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div align="center"><img src="/note/images/css-secret/9/1.png"></div><p>使用这一技巧还可以实现类似信封样式的边框。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">padding</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>\n<span class="token property">border</span><span class="token punctuation">:</span> 1em solid transparent<span class="token punctuation">;</span>\n<span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>white<span class="token punctuation">,</span>white<span class="token punctuation">)</span> padding-box<span class="token punctuation">,</span>\n            <span class="token function">repeating-linear-gradient</span><span class="token punctuation">(</span>-45deg<span class="token punctuation">,</span>red 0<span class="token punctuation">,</span>red 12.5%<span class="token punctuation">,</span>transparent 0<span class="token punctuation">,</span>transparent 25%<span class="token punctuation">,</span>#58a 25%<span class="token punctuation">,</span>#58a 37.5%<span class="token punctuation">,</span>transparent 0<span class="token punctuation">,</span>transparent 50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">background-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">,</span>40px 40px<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div align="center"><img src="/note/images/css-secret/9/2.png"></div>',7),t=(0,p.Uk)("给渐变边框加上动画，还可以实现蚂蚁线效果。 演示地址："),c={href:"https://codesandbox.io/s/weathered-framework-5s32u",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("demo"),r=(0,p.uE)('<h2 id="脚注效果" tabindex="-1"><a class="header-anchor" href="#脚注效果" aria-hidden="true">#</a> 脚注效果</h2><p>在border-image属性中使用渐变可以实现文字的脚注效果。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">border-top</span><span class="token punctuation">:</span>  3px solid transparent<span class="token punctuation">;</span>\n<span class="token property">border-image</span><span class="token punctuation">:</span> 100% 0 0 <span class="token function">linear-gradient</span><span class="token punctuation">(</span>90deg<span class="token punctuation">,</span>currentColor 3em<span class="token punctuation">,</span>transparent 0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div align="center"><img src="/note/images/css-secret/9/3.png"></div>',4),u={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[e,(0,p.Wm)("p",null,[t,(0,p.Wm)("a",c,[o,(0,p.Wm)(a)])]),r],64)}}}}]);