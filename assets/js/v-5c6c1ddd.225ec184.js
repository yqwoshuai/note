(self.webpackChunknote=self.webpackChunknote||[]).push([[3992],{4579:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-5c6c1ddd",path:"/css-secret/33.html",title:"第三十三章、垂直居中",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基于绝对定位",slug:"基于绝对定位",children:[]},{level:2,title:"基于视口单位",slug:"基于视口单位",children:[]},{level:2,title:"基于flexbox",slug:"基于flexbox",children:[]}],filePathRelative:"css-secret/33.md"}},9584:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="第三十三章、垂直居中" tabindex="-1"><a class="header-anchor" href="#第三十三章、垂直居中" aria-hidden="true">#</a> 第三十三章、垂直居中</h1><h2 id="基于绝对定位" tabindex="-1"><a class="header-anchor" href="#基于绝对定位" aria-hidden="true">#</a> 基于绝对定位</h2><p>当元素宽高为固定值时，使用绝对定位，将其左上角置于父元素中心，再对其设置反向的负边距（值为元素宽高的一半），让元素的正中心位于父元素的中心。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">main</span><span class="token punctuation">{</span>\n\t<span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n\t<span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\n\t<span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n\t<span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n\t<span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n\t<span class="token property">margin-top</span><span class="token punctuation">:</span>-100px<span class="token punctuation">;</span>\n\t<span class="token property">margin-left</span><span class="token punctuation">:</span> -200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div align="center"><img src="/note/images/css-secret/33/1.png"></div><p>上述方法要求元素宽高固定，因为绝大多数按照百分比的属性值都是基于父元素的尺寸进行计算的，使用transform属性中的translate，可以让元素基于自身宽高百分比偏移。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">main</span><span class="token punctuation">{</span>\n\t<span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n\t<span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n\t<span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n\t<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div align="center"><img src="/note/images/css-secret/33/2.png"></div><h2 id="基于视口单位" tabindex="-1"><a class="header-anchor" href="#基于视口单位" aria-hidden="true">#</a> 基于视口单位</h2><p>CSS3新增视口单位vw和vh，1vw表示视口宽度的1%，1vh表示视口宽度的1%。当视口宽度小于高度时，1vmin等于1vw，否则等于1vh。当视口宽度小于高度时，1vmax等于1vw，否则等于1vh。即1vmin和1vmax表示vh和vw中的最小值和最大值。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">main</span><span class="token punctuation">{</span>\n\t<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n\t<span class="token property">margin</span><span class="token punctuation">:</span> 50vh auto 0<span class="token punctuation">;</span>\n\t<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这种方法只有在视口中居中时才可以使用</p><h2 id="基于flexbox" tabindex="-1"><a class="header-anchor" href="#基于flexbox" aria-hidden="true">#</a> 基于flexbox</h2><p>基于弹性盒模型的方案是最佳方案，现在浏览器的支持也已经很高了。对其父元素设置display: flex;，再对元素本身设置margin: auto;，就可以让元素在水平和垂直方向上都居中。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.a</span><span class="token punctuation">{</span>\n\t<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">main</span><span class="token punctuation">{</span>\n\t<span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div align="center"><img src="/note/images/css-secret/33/3.png"></div><p>flex还可以让元素中没有被标签包裹的文本节点垂直居中</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">main</span><span class="token punctuation">{</span>\n\t<span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n\t<span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n\t<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n\t<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n\t<span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n\t<span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div align="center"><img src="/note/images/css-secret/33/4.png"></div>',19),e={render:function(n,s){return p}}}}]);