(self.webpackChunknote=self.webpackChunknote||[]).push([[6683],{7568:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-09b03b14",path:"/css-secret/18.html",title:"第十八章、染色效果",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基于滤镜的方案 (此属性浏览器支持程度不高)",slug:"基于滤镜的方案-此属性浏览器支持程度不高",children:[]},{level:2,title:"基于混合模式的方案 (此属性浏览器支持程度不高)",slug:"基于混合模式的方案-此属性浏览器支持程度不高",children:[]}],filePathRelative:"css-secret/18.md"}},3989:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="第十八章、染色效果" tabindex="-1"><a class="header-anchor" href="#第十八章、染色效果" aria-hidden="true">#</a> 第十八章、染色效果</h1><h2 id="基于滤镜的方案-此属性浏览器支持程度不高" tabindex="-1"><a class="header-anchor" href="#基于滤镜的方案-此属性浏览器支持程度不高" aria-hidden="true">#</a> 基于滤镜的方案 (此属性浏览器支持程度不高)</h2><p>网页中常常看到图片为灰度的，hover之后渐变为彩色，可以利用filter滤镜实现这一效果。filter中grayscale函数可以实现灰度特效。filter属性还支持CSS渐变动画。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">#a img</span><span class="token punctuation">{</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> filter 1s<span class="token punctuation">;</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">#a img:hover</span><span class="token punctuation">{</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div align="center"><img src="/note/images/css-secret/18/1.gif"></div><p>filter属性的滤镜可以叠加使用。下面的代码可以让图片变为一种亮粉红色。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">sepia</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span> <span class="token function">saturate</span><span class="token punctuation">(</span>4<span class="token punctuation">)</span> <span class="token function">hue-rotate</span><span class="token punctuation">(</span>295deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div align="center"><img src="/note/images/css-secret/18/2.png"></div><h2 id="基于混合模式的方案-此属性浏览器支持程度不高" tabindex="-1"><a class="header-anchor" href="#基于混合模式的方案-此属性浏览器支持程度不高" aria-hidden="true">#</a> 基于混合模式的方案 (此属性浏览器支持程度不高)</h2><p>当两个元素叠加时，混合模式可以控制上层元素与下层元素的颜色进行混合，其本质与PS中的混合模式相同。混合模式即为mix-blend-mode和background-blend-mode属性，前者为整个元素指定混合模式，后者为每层背景单独指定混合模式。 使用mix-blend-mode需要两层结构，例如a链接包裹的img图片。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">#a</span><span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #ff1374<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">#a img</span><span class="token punctuation">{</span>\n    <span class="token property">mix-blend-mode</span><span class="token punctuation">:</span> luminosity<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div align="center"><img src="/note/images/css-secret/18/3.png"></div><p>mix-blend-mode属性不支持CSS渐变动画，如果想要实现渐变动画，可以换另一种方式。将这张图片设为某个元素的背景图，再对这个元素使用background-blend-mode属性，并同时设置其背景颜色，然背景颜色与背景图片进行混合。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>&lt;div id=<span class="token string">&quot;a&quot;</span> style=<span class="token string">&quot;background-image: url(img.jpg)&quot;</span><span class="token selector">&gt;&lt;/div&gt;\n\n#a</span><span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff1374<span class="token punctuation">;</span>\n    <span class="token property">background-blend-mode</span><span class="token punctuation">:</span> luminosity<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> .5s background-color<span class="token punctuation">;</span> // 对其背景颜色使用渐变，改变背景色就能实现渐变效果。\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这种方法的缺点是图片变成了背景图，在语义上不是一张图片了，而且尺寸大小要在CSS中写死。</p>',15),p={render:function(n,s){return e}}}}]);