(self.webpackChunknote=self.webpackChunknote||[]).push([[2999],{932:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-e798617e",path:"/css-secret/40.html",title:"第四十章、沿环形路径平移的动画",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"css-secret/40.md"}},7019:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="第四十章、沿环形路径平移的动画" tabindex="-1"><a class="header-anchor" href="#第四十章、沿环形路径平移的动画" aria-hidden="true">#</a> 第四十章、沿环形路径平移的动画</h1><p>通过改变元素的变形对称点，可以使元素绕着环形路径运动。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">&lt;div class=&quot;a&quot;&gt;\n    ![](1.png)\n&lt;/div&gt;\n\nimg</span><span class="token punctuation">{</span>\n\t<span class="token property">animation</span><span class="token punctuation">:</span> run 5s infinite linear<span class="token punctuation">;</span>\n\t<span class="token property">transform-origin</span><span class="token punctuation">:</span> 50% 170px<span class="token punctuation">;</span>  // 将元素的变形对称点改变为容器的中心，使元素绕元素中心转动\n<span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@keyframes</span> run</span> <span class="token punctuation">{</span>\n    <span class="token selector">to</span> <span class="token punctuation">{</span>\n      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div align="center"><img src="/note/images/css-secret/40/1.gif"></div><p>这样的缺点是使得元素自身旋转，当元素位于底部时倒过来了，如果其中有文字，也会倒过来。额外加入一层html结构进行旋转可以用来抵消这个效果。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">&lt;div class=&quot;a&quot;&gt;\n\t&lt;div class=&quot;con&quot;&gt;\n\t\t![](2.png)\n\t&lt;/div&gt;\n&lt;/div&gt;\n\n.con</span><span class="token punctuation">{</span>\n\t<span class="token property">animation</span><span class="token punctuation">:</span> run 5s infinite linear<span class="token punctuation">;</span>\n\t<span class="token property">transform-origin</span><span class="token punctuation">:</span> 50% 170px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">img</span><span class="token punctuation">{</span>\n\t<span class="token property">animation</span><span class="token punctuation">:</span>inherit<span class="token punctuation">;</span> // 继承容器元素的动画效果\n\t<span class="token property">animation-direction</span><span class="token punctuation">:</span> reverse<span class="token punctuation">;</span> 反向执行动画，达到抵消的效果\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div align="center"><img src="/note/images/css-secret/40/2.gif"></div><p>不增加额外的html结构也能实现这一效果，事实上所有的transform-origin都可以用translate()模仿出来。变形函数并不是独立的，它会把整个元素的坐标系统也进行位移变形，即将元素的对称点位移变形。从而影响后续的变形操作，所以多次变形操作的顺序不同，导致的结果也会不一样。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">img</span><span class="token punctuation">{</span>\n    <span class="token property">animation</span><span class="token punctuation">:</span> run 5s infinite linear<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@keyframes</span> run</span> <span class="token punctuation">{</span>\n    <span class="token selector">from</span> <span class="token punctuation">{</span>\n      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>170px<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span>\n                  <span class="token function">rotate</span><span class="token punctuation">(</span>0turn<span class="token punctuation">)</span>\n                  <span class="token function">translateY</span><span class="token punctuation">(</span>-170px<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>50%<span class="token punctuation">)</span>\n                  <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">to</span> <span class="token punctuation">{</span>\n      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>170px<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span>\n                  <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span>\n                  <span class="token function">translateY</span><span class="token punctuation">(</span>-170px<span class="token punctuation">)</span> <span class="token function">translateY</span><span class="token punctuation">(</span>50%<span class="token punctuation">)</span>\n                  <span class="token function">rotate</span><span class="token punctuation">(</span>0turn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div align="center"><img src="/note/images/css-secret/40/3.gif"></div>',10),t={render:function(n,s){return p}}}}]);