(self.webpackChunknote=self.webpackChunknote||[]).push([[6195],{1561:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-226758bf",path:"/css-secret/20.html",title:"第二十章、折角效果",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"45度的折角",slug:"_45度的折角",children:[]},{level:2,title:"任意角度的折角",slug:"任意角度的折角",children:[]}],filePathRelative:"css-secret/20.md"}},9357:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="第二十章、折角效果" tabindex="-1"><a class="header-anchor" href="#第二十章、折角效果" aria-hidden="true">#</a> 第二十章、折角效果</h1><h2 id="_45度的折角" tabindex="-1"><a class="header-anchor" href="#_45度的折角" aria-hidden="true">#</a> 45度的折角</h2><p>当折角为45deg时，实现原理是利用两层渐变背景，一层用来实现底层背景，一层用来实现折叠的三角，再把三角层覆盖在底层上，就形成了一个三角形的折角。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to left bottom<span class="token punctuation">,</span>transparent 50%<span class="token punctuation">,</span>#333 50%<span class="token punctuation">)</span> no-repeat right top / 20px 20px<span class="token punctuation">,</span>\n            <span class="token function">linear-gradient</span><span class="token punctuation">(</span>-135deg<span class="token punctuation">,</span> transparent 14px<span class="token punctuation">,</span>#58a 0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n// 底层透明为14px，这个值是三角大小的二分之根号二倍，通过勾股定理计算得出，三角中的20px是渐变的长和宽，背景渐变中14px的是对角线的长度，即三角形的高。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div align="center"><img src="/note/images/css-secret/20/1.png"></div><h2 id="任意角度的折角" tabindex="-1"><a class="header-anchor" href="#任意角度的折角" aria-hidden="true">#</a> 任意角度的折角</h2><p>实现任意角度的折角，需要用渐变来实现背景，用伪元素来生成折角的部分。实现30deg的折角：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.a</span><span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>-150deg<span class="token punctuation">,</span>transparent 20px<span class="token punctuation">,</span>#58a 0<span class="token punctuation">)</span><span class="token punctuation">;</span>  // 20px为折角直角三角形的高\n<span class="token punctuation">}</span>\n<span class="token selector">.a:before</span><span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 23px<span class="token punctuation">;</span>  // 由三角函数可得长度为  20/cos 30°  \n    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span> // 由三角函数可得高度为  20/sin 30° \n    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span> to left bottom<span class="token punctuation">,</span> transparent 50%<span class="token punctuation">,</span>#333 0<span class="token punctuation">)</span> right top no-repeat<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div align="center"><img src="/note/images/css-secret/20/2.png"></div><p>再对伪元素进行旋转，贴合渐变背景形成的折角边。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-30deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">transform-origin</span><span class="token punctuation">:</span> bottom right<span class="token punctuation">;</span> // 让旋转点固定为右下角，使得伪元素的位置可控性更高，这样伪元素右下角会贴合主元素边缘，这样伪元素就只要在高度这个方向上移动就可以贴合背景。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div align="center"><img src="/note/images/css-secret/20/3.png"></div><p>伪元素在高度上的位移可以通过之前一图计算出，要让伪元素的右下角贴合渐变背景的折角右顶点，上移的高度就等于伪元素的高减去宽。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-17px<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-30deg<span class="token punctuation">)</span><span class="token punctuation">;</span> // 先位移，再旋转，保证伪元素右下角的位置固定在右边缘\n<span class="token property">transform-origin</span><span class="token punctuation">:</span> bottom right<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div align="center"><img src="/note/images/css-secret/20/4.png"></div><p>加上一定的修饰样式，让折角更加逼真。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.a</span><span class="token punctuation">{</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.a:before</span><span class="token punctuation">{</span>\n    <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span> // 折角的圆角为左下角。\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> -5px 5px 8px -3px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div align="center"><img src="/note/images/css-secret/20/5.png"></div>',18),t={render:function(n,s){return p}}}}]);