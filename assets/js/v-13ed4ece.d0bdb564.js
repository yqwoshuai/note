(self.webpackChunknote=self.webpackChunknote||[]).push([[1341],{9014:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-13ed4ece",path:"/css-secret/15.html",title:"第十五章、简单的饼图",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"css-secret/15.md"}},8662:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="第十五章、简单的饼图" tabindex="-1"><a class="header-anchor" href="#第十五章、简单的饼图" aria-hidden="true">#</a> 第十五章、简单的饼图</h1><p>使用渐变背景和伪元素，可以实现简单的饼图。其原理是：将渐变背景作为底色，再将主元素一半大小的伪元素覆盖在主元素之上，并遮盖住渐变背景中显示比率的颜色。主元素中背景色和比率色各占一半，利用伪元素的旋转来显示出表示比率部分的颜色。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">#a</span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 200px auto<span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span>transparent 50%<span class="token punctuation">,</span>#655 0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div align="center"><img src="/note/images/css-secret/15/1.png"></div><p>加上覆盖伪元素之后，虚线框表示伪元素的位置。将伪元素设置成刚好覆盖比率色的半圆，并将旋转对称点设定为左边的中点，这样伪元素就会以主元素的圆心为对称点进行旋转。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">#a:after</span><span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 1px dashed #333<span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0 100% 100% 0 / 50%<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">margin-left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div align="center"><img src="/note/images/css-secret/15/2.png"></div><p>伪元素旋转20%时。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>.2turn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div align="center"><img src="/note/images/css-secret/15/3.png"></div><p>当伪元素旋转的度数大于50%时，比例图会崩坏。</p><div align="center"><img src="/note/images/css-secret/15/4.png"></div><p>利用CSS3animation动画可以解决这一问题，原理是：当比率超过50%时，将伪元素的颜色改为比率色的颜色。一个从0到100%的比率动画。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@keyframes</span> ani</span> <span class="token punctuation">{</span>\n    <span class="token selector">to</span> <span class="token punctuation">{</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>.5turn<span class="token punctuation">)</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@keyframes</span> bg</span> <span class="token punctuation">{</span>\n    <span class="token selector">50%</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> #655 <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token selector">#a:after</span><span class="token punctuation">{</span>\n    <span class="token comment">/*outline: 1px dashed #333; */</span>\n    <span class="token property">animation</span><span class="token punctuation">:</span> ani 3s linear infinite<span class="token punctuation">,</span>\n               bg 6s step-end infinite<span class="token punctuation">;</span> // step-end表示只显示动画每一步的结束帧，这里即让伪元素的背景色在50%位置时发生突变。\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div align="center"><img src="/note/images/css-secret/15/5.gif"></div><p>利用以下简单的HTML结构显示不同比率的静态饼图。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>20%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>60%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>解决方案是让伪元素的动画静止在相应比率的位置，给动画延迟animation-delay属性设置一个负的值，表示动画已经播放了相应的时间，将整个动画的时间设置为100s，这样60%的饼图就是动画静止在已经执行了60s的位置。为了能根据结构的内容自动生成饼图，要将animation-delay属性设置在主元素的内联样式中，因为伪元素无法设置内联样式，所以在伪元素中使用animation-delay的继承值。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">&lt;div class=&quot;a&quot; style=&quot;animation-delay: -20s;&quot;&gt;20%&lt;/div&gt;\n&lt;div class=&quot;a&quot; style=&quot;animation-delay: -60s;&quot;&gt;60%&lt;/div&gt;\n#a:after</span><span class="token punctuation">{</span>\n    <span class="token comment">/*outline: 1px dashed #333; */</span>\n    <span class="token property">animation</span><span class="token punctuation">:</span> ani 50s linear infinite<span class="token punctuation">,</span>\n               bg 100s step-end infinite<span class="token punctuation">;</span> \n<span class="token property">animation-play-state</span><span class="token punctuation">:</span> paused<span class="token punctuation">;</span>\n<span class="token property">animation-delay</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div align="center"><img src="/note/images/css-secret/15/6.png"></div><p>利用JS获取内容的值，并将其转化为内联样式赋值给主元素，就可以实现任意比率的简单饼图。</p>',21),t={render:function(n,s){return p}}}}]);